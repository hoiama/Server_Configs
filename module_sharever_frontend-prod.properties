server.port=443

# SSL / TSL
security.require-ssl=true               #Tell Spring Security (if used) to require requests over HTTPS and Bloqued HTTP
server.ssl.key-store-type=PKCS12                #The format used for the keystore 
server.ssl.key-store=classpath: keystore.jks           #The path to the keystore containing the certificate
server.ssl.key-store-password=250112@hR              # The password used to generate the certificate
server.ssl.key-alias=tomcat             # The alias mapped to the certificate


# EUREKA
eureka.instance.hostname = localhost
eureka.instance.port = 9091
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone = http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/
server.wait-time-in-ms-when-sync-empty = 3000


# OAUTH2
user.oauth.client = client
user.oauth.secret = secret
user.oauth.redirectUris = http://localhost:8082/login/oauth2/code/
security.sessions = NEVER
authserver.hostname = http://localhost:9092
security.oauth2.resource.userInfoUri = ${authserver.hostname}/oauth/check_token
security.oauth2.resource.prefer-token-info= false



# ACTUATOR
management.endpoints.web.base-path=/frontend/actuator
management.endpoint.shutdown.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
